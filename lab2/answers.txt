Exercise2: just chroot and then change to "root" directory.

Exercise3: (1) set zookd and zookfs with different uids and gids
           (2) chroot,setuid ,setgid and setgroups.
           (3) change database access priviledge to let zookfs access it.

Exercise4: use both url, args and file access permission to make sure that
               static service can not access dynamic service's data base and cannot execution anything
               dynmamic service can only execture index.cgi and will not modify static files(no write priviledge)
Exercise5: this exercise is a little complex, I Just finish it as the guide says(not necessary the same order).
Exercise6: this exercise is not different at all, but it envolves an important aspect of password security,
           just follow the tutorial, the type of "salt" in table "Cred" should be "Binary"
Exercise7: similar to Exercise5, but a little more complex, changes are made to several files which uses "bank"
           and "transfer" service. this is a little problem, since "db" can not be serialized into json format,
           so I don't implement "get_log" funtion in bank-server, instead I just let other services to access
           transfer database directly.
Exercise8: just add an argument "token" when transfer.py invokes transfer(), and use check_token() from auth_client.py
           to check the token in bank-server.py 
Exercise9: easy. need to get token from database cred to finish transfer()
Exercise10: (1) construct a dirctory shared by all the profiles and set its access mode to 700 to prevent other 
                services from accessing them.
            (2) construct a dirctory for each user to and chroot to this directory to jail it, and set access mode to
                777 to let other process(but same profile user) to access it.
Exercise11: just finish it as the tutorial guides. 
